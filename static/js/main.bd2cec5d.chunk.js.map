{"version":3,"sources":["store/actions/actions.js","components/utils/utils.js","components/Item/Item.js","components/PokeCard/PokeCard.js","components/SelectedItem/SelectedItem.js","components/SelectedCard/SelectedCard.js","components/PokeCardsList/PokeCardsList.js","components/Viewer/Viewer.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["selectCard","payload","type","unselectCard","getPokemonPrimaryStat","pokedex","stat","getPokemonImage","sprites","front_default","getPokemponTypes","types","sort","a","b","slot","map","item","name","getPokemonStat","stats","find","base_stat","getPokemonMoves","moves","length","className","require","Item","image","onClick","id","filterByType","typesPrimaryClass","typesSecondaryClass","window","scrollTo","src","alt","P","Pokedex","PokeCard","props","getPokemonObject","getPokemonByName","then","res","setState","catch","state","this","selectedType","itemProps","isHidden","display","includes","style","React","Component","connect","selectedCardId","SelectedItem","attack","defense","health","SPAttack","SPDefence","speed","weight","Table","xs-6","xs-2","SelectedCard","selectedItemProps","firstId","lastId","isMobile","innerWidth","innerHeight","Container","fluid","Row","Col","lg","xs","resultArray","i","push","el","toString","makeIdsArray","key","changeFirstId","pokedexProps","Button","color","size","App","Boolean","location","hostname","match","initialState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd2cec5d.chunk.js","sourcesContent":["export const SELECT_CARD = 'SELECT_CARD';\r\nexport const CHANGE_FIRST_ID = 'CHANGE_FIRST_ID';\r\nexport const UNSELECT_CARD = 'UNSELECT_CARD';\r\nexport const FILTER_BY_TYPE = 'FILTER_BY_TYPE';\r\n\r\nexport const selectCard = (payload) => ({\r\n    type: SELECT_CARD,\r\n    payload,\r\n})\r\n\r\nexport const unselectCard = (payload) => ({\r\n    type: UNSELECT_CARD,\r\n    payload,\r\n})\r\n\r\nexport const changeFirstId = (payload) => ({\r\n    type: CHANGE_FIRST_ID,\r\n    payload,\r\n})\r\n\r\nexport const filterByType = (payload) => ({\r\n    type: FILTER_BY_TYPE,\r\n    payload,\r\n})\r\n","export const getPokemonPrimaryStat = (pokedex, stat) => pokedex && pokedex[stat];\r\n\r\nexport const getPokemonImage = (pokedex) => pokedex && pokedex.sprites && pokedex.sprites.front_default;\r\n\r\nexport const getPokemponTypes = (pokedex) => pokedex &&\r\n    pokedex.types &&\r\n    pokedex.types.sort((a, b) => a && b && a.slot > b.slot ? 1 : -1)\r\n            .map(item => item && item.type && item.type.name);\r\n\r\nexport const getPokemonStat = (pokedex, stat) => {\r\n        const stats = pokedex &&\r\n            pokedex.stats &&\r\n            pokedex.stats.find(item => item.stat.name === stat)\r\n        return stats && stats.base_stat\r\n    };\r\n\r\nexport const getPokemonMoves = (pokedex) => pokedex && pokedex.moves && pokedex.moves.length;\r\n","import React from 'react';\r\nimport './Item.css';\r\n\r\nconst className = require('classnames');\r\n\r\nconst Item = ({ name, image, types, onClick, id, filterByType }) => {\r\n\r\n    const typesPrimaryClass = types && className(types[0], 'item-types');\r\n    const typesSecondaryClass = types && className(types[1], 'item-types');\r\n    \r\n    return (\r\n        <div onClick={() => {\r\n            onClick(id)\r\n            window.scrollTo(0, 0)\r\n            }}\r\n            className='container-fluid item-container'>\r\n            <img src={image} alt={name}/>\r\n            <h5 className='item-name'>{name}</h5>\r\n                <div className={'types-container'}>\r\n                    { types && (\r\n                        <div className={ typesPrimaryClass } onClick={ () => filterByType(types[0]) }>\r\n                            <span>{types[0]}</span>\r\n                        </div> )\r\n                    }\r\n                    {\r\n                        types && types[1] && (\r\n                            <div className={ typesSecondaryClass } onClick={ () => filterByType(types[1]) }>\r\n                                <span>{types[1]}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectCard, filterByType } from '../../store/actions/actions'\r\nimport { getPokemonPrimaryStat, getPokemonImage, getPokemponTypes } from '../utils/utils';\r\nimport Item from '../Item/Item';\r\n\r\nconst Pokedex = require('pokeapi-js-wrapper');\r\nconst P = new Pokedex.Pokedex();\r\n\r\nclass PokeCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pokedex: {},\r\n        }\r\n    }\r\n\r\n    getPokemonObject = async () => {\r\n        this.props && this.props.id &&\r\n        await P.getPokemonByName(this.props.id)\r\n            .then(res => this.setState({ pokedex: res })\r\n            )\r\n            .catch(() => {})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPokemonObject()\r\n    }\r\n\r\n    render() {\r\n        const { pokedex } = this.state;\r\n        const { selectCard, id, filterByType, selectedType } = this.props;\r\n        const itemProps = {\r\n            pokedex,\r\n            name: getPokemonPrimaryStat(pokedex, 'name'),\r\n            image: getPokemonImage(pokedex),\r\n            types: getPokemponTypes(pokedex),\r\n            onClick: selectCard,\r\n            filterByType,\r\n            id,\r\n            selectedType,\r\n        }\r\n        const isHidden = (selectedType !== '' || selectedType !== itemProps.selectedType) ? {display: 'none'} : {};\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    this.props &&\r\n                    (selectedType === '' || ( itemProps && itemProps.types && itemProps.types.includes(selectedType))) &&\r\n                    <Item {...itemProps} style={isHidden}/>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ({ selectedCardId, selectedType }) => ({ selectedCardId, selectedType })\r\n\r\nexport default connect(mapStateToProps, { selectCard, filterByType })(PokeCard)\r\n","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport './SelectedItem.css';\r\n\r\nconst SelectedItem = ({ \r\n    id,\r\n    name,\r\n    image,\r\n    types,\r\n    attack,\r\n    defense,\r\n    health,\r\n    SPAttack,\r\n    SPDefence,\r\n    speed,\r\n    weight,\r\n    moves,\r\n    onClick }) => {\r\n\r\n    return (\r\n        <div className='container-fluid item-container selected-item-container' onClick={() => onClick(id)}>\r\n            <img src={image} alt={name} />\r\n            <h5>{name} #00{id}</h5>\r\n            <div className='table-responsive fixed-table-body'>\r\n                <Table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <span>Type</span>\r\n                            </td>\r\n                            <td>\r\n                                { types && (\r\n                                    <span>\r\n                                        <span>{types[0]}</span>\r\n                                        {\r\n                                            types[1] && (\r\n                                                <span>, {types[1]}</span>\r\n                                            )\r\n                                        }\r\n                                    </span>\r\n                                    )\r\n                                }\r\n                            </td>    \r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>Attack</span>\r\n                            </td>\r\n                            <td>\r\n                                {attack}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>Defence</span>\r\n                            </td>\r\n                            <td>\r\n                                {defense}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>HP</span>\r\n                            </td>\r\n                            <td>\r\n                                {health}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>SP Attack</span>\r\n                            </td>\r\n                            <td>\r\n                                {SPAttack}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='xs-6'>\r\n                                <span>SP Defence</span>\r\n                            </td>\r\n                            <td>\r\n                                {SPDefence}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>Speed</span>\r\n                            </td>\r\n                            <td>\r\n                                {speed}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td xs-6>\r\n                                <span>Weight</span>\r\n                            </td>\r\n                            <td xs-2>\r\n                                {weight}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <span>Total moves</span>\r\n                            </td>\r\n                            <td>\r\n                                {moves}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedItem\r\n","import React from 'react';\r\nimport { getPokemonPrimaryStat, getPokemonImage, getPokemponTypes, getPokemonStat, getPokemonMoves } from '../utils/utils';\r\nimport SelectedItem from '../SelectedItem/SelectedItem';\r\nimport { connect } from 'react-redux';\r\nimport { unselectCard } from '../../store/actions/actions';\r\n\r\nconst Pokedex = require('pokeapi-js-wrapper');\r\nconst P = new Pokedex.Pokedex();\r\n\r\nclass SelectedCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pokedex: {},\r\n        }\r\n    }\r\n\r\n    getPokemonObject = async () => {\r\n        this.props && this.props.id &&\r\n        await P.getPokemonByName(this.props.id)\r\n            .then(res => this.setState({ pokedex: res })\r\n            )\r\n            .catch(() => {})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getPokemonObject()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.getPokemonObject()\r\n    }\r\n\r\n    render() {\r\n        const { pokedex } = this.state;\r\n        const { id, unselectCard } = this.props;\r\n        const selectedItemProps = {\r\n            pokedex,\r\n            name: getPokemonPrimaryStat(pokedex, 'name'),\r\n            image: getPokemonImage(pokedex),\r\n            types: getPokemponTypes(pokedex),\r\n            attack: getPokemonStat(pokedex, 'attack'),\r\n            defense: getPokemonStat(pokedex, 'defence'),\r\n            health: getPokemonStat(pokedex, 'hp'),\r\n            SPAttack: getPokemonStat(pokedex, 'special-attack'),\r\n            SPDefence: getPokemonStat(pokedex, 'special-defense'),\r\n            speed: getPokemonStat(pokedex, 'speed'),\r\n            weight: getPokemonPrimaryStat(pokedex, 'weight'),\r\n            moves: getPokemonMoves(pokedex),\r\n            onClick: unselectCard,\r\n            id,\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    this.props &&\r\n                    <SelectedItem {...selectedItemProps} />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ({ selectedCardId }) => ({ selectedCardId })\r\n\r\nexport default connect(mapStateToProps, { unselectCard })(SelectedCard)\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { selectCard, unselectCard } from '../../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport PokeCard from '../PokeCard/PokeCard';\r\nimport SelectedCard from '../SelectedCard/SelectedCard';\r\n\r\nconst PokeCardsList = (props) => {\r\n\r\n    const { selectedCardId, firstId, lastId } = props;\r\n\r\n    const makeIdsArray = () => {\r\n        let resultArray = [];\r\n        for(let i = firstId; i <= lastId; i++) {\r\n            resultArray.push(i)\r\n        }\r\n        return resultArray.map(el => el.toString());\r\n    }\r\n\r\n    const isMobile = window.innerWidth < window.innerHeight;\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            {\r\n                isMobile &&\r\n                selectedCardId > 0 && (\r\n                    <Row>\r\n                        <SelectedCard id={ selectedCardId } />\r\n                    </Row>\r\n                )\r\n            }\r\n            <Row>\r\n                <Col lg={ selectedCardId > 0 ? 6 : 12 } xs={12} >\r\n                    <Row>\r\n                        {\r\n                            makeIdsArray().map((id) => (\r\n                                <Col key={ id } xs={12} lg={4}>\r\n                                    <PokeCard id={id} />\r\n                                </Col>\r\n                            )\r\n                        )}\r\n                    </Row>\r\n                    </Col>\r\n                <Col xs={6}>\r\n                    {\r\n                        !isMobile &&\r\n                        selectedCardId > 0 && (\r\n                            <Col lg={10}>\r\n                                <SelectedCard id={ selectedCardId } />\r\n                            </Col>\r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ selectedCardId, firstId, lastId }) => ({ selectedCardId, firstId, lastId })\r\n\r\nexport default connect(mapStateToProps, { selectCard, unselectCard })(PokeCardsList)\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PokeCardsList from '../PokeCardsList/PokeCardsList';\r\nimport { changeFirstId } from '../../store/actions/actions';\r\nimport './Viewer.css';\r\n\r\nconst Viewer = ({ firstId, lastId, changeFirstId, selectedCardId }) => {\r\n    const pokedexProps = { firstId, lastId, selectedCardId };\r\n    return (\r\n        <div className='container-fluid'>\r\n            <h1>POKEDEX</h1>\r\n            <PokeCardsList {...pokedexProps} />\r\n            <Button\r\n                onClick={() => changeFirstId()}\r\n                color='primary'\r\n                size='lg'>Load More</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ firstId, lastId, selectedCardId }) => ({ firstId, lastId, selectedCardId });\r\n\r\nexport default connect(mapStateToProps, { changeFirstId })(Viewer);\r\n","import React from 'react';\nimport './App.css';\nimport Viewer from './components/Viewer/Viewer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Viewer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { SELECT_CARD, CHANGE_FIRST_ID, UNSELECT_CARD, FILTER_BY_TYPE } from './actions/actions';\r\n\r\nconst initialState = {\r\n    selectedCardId: 0,\r\n    firstId: 1,\r\n    lastId: 12,\r\n    selectedType: '',\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n    switch(type) {\r\n        case SELECT_CARD:\r\n            return {\r\n                ...state,\r\n                selectedCardId: payload,\r\n            };\r\n        case UNSELECT_CARD:\r\n            return {\r\n                ...state,\r\n                selectedCardId: 0,\r\n            }\r\n        case CHANGE_FIRST_ID:\r\n            const { firstId, lastId } = state;\r\n            return {\r\n                ...state,\r\n                firstId: firstId + 12,\r\n                lastId: lastId + 12,\r\n                selectedCardId: 0,\r\n                selectedType: '',\r\n            };\r\n        case FILTER_BY_TYPE:\r\n            return {\r\n                ...state,\r\n                selectedType: payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(\r\n    applyMiddleware(),\r\n  ));\r\n  \r\n  export default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { store } from './store/reducer';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}